{
	"info": {
		"_postman_id": "c3bb6f1f-3f81-41cf-89fe-38c01fb37caf",
		"name": "water-regression",
		"description": "Regression tests for Access to Water API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Datasources",
			"item": [
				{
					"name": "List Datasources",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response time is less than 200 ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});",
									"pm.test(\"Valid JSON response\", function () {",
									"    pm.expect(pm.response.json());",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/datasources",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"datasources"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Datasources (cwms-location)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response time is less than 200 ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});",
									"pm.test(\"Valid JSON response\", function () {",
									"    pm.expect(pm.response.json());",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/datasources?datatype=cwms-location",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"datasources"
							],
							"query": [
								{
									"key": "datatype",
									"value": "cwms-location"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Datasource (cwms-location, lrn)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response time is less than 200 ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});",
									"pm.test(\"Valid JSON response\", function () {",
									"    pm.expect(pm.response.json());",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/datasources?datatype=cwms-location&provider=lrn",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"datasources"
							],
							"query": [
								{
									"key": "datatype",
									"value": "cwms-location"
								},
								{
									"key": "provider",
									"value": "lrn"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Datasource (cwms-level, mvp)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response time is less than 200 ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});",
									"pm.test(\"Valid JSON response\", function () {",
									"    pm.expect(pm.response.json());",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/datasources?datatype=cwms-level&provider=mvp",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"datasources"
							],
							"query": [
								{
									"key": "datatype",
									"value": "cwms-level"
								},
								{
									"key": "provider",
									"value": "mvp"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Datasource (usgs-site, usgs)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response time is less than 200 ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});",
									"pm.test(\"Valid JSON response\", function () {",
									"    pm.expect(pm.response.json());",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/datasources?datatype=usgs-site&provider=usgs",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"datasources"
							],
							"query": [
								{
									"key": "datatype",
									"value": "usgs-site"
								},
								{
									"key": "provider",
									"value": "usgs"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Datasource (nws-site, noaa-nws)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response time is less than 200 ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});",
									"pm.test(\"Valid JSON response\", function () {",
									"    pm.expect(pm.response.json());",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/datasources?datatype=nws-site&provider=noaa-nws",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"datasources"
							],
							"query": [
								{
									"key": "datatype",
									"value": "nws-site"
								},
								{
									"key": "provider",
									"value": "noaa-nws"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "USGS Parameters",
			"item": [
				{
					"name": "List Parameters",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/usgs/parameters",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"usgs",
								"parameters"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Locations (GET)",
			"item": [
				{
					"name": "List Locations",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/locations",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"locations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Location",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/locations/lrh-test-project",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"locations",
								"lrh-test-project"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Locations - Filter Provider",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/locations?provider=lrh",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"locations"
							],
							"query": [
								{
									"key": "provider",
									"value": "lrh"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List Locations - Filter Provider & Datatype",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/locations?provider=lrh&datatype=cwms-location",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"locations"
							],
							"query": [
								{
									"key": "provider",
									"value": "lrh"
								},
								{
									"key": "datatype",
									"value": "cwms-location"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List Locations - Filter Provider & Datatype & State",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/locations?provider=lrh&datatype=cwms-location&state=wv",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"locations"
							],
							"query": [
								{
									"key": "provider",
									"value": "lrh"
								},
								{
									"key": "datatype",
									"value": "cwms-location"
								},
								{
									"key": "state",
									"value": "wv"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List Locations - Filter Provider & Datatype & State & Search",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/locations?provider=lrh&datatype=cwms-location&state=wv",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"locations"
							],
							"query": [
								{
									"key": "provider",
									"value": "lrh"
								},
								{
									"key": "datatype",
									"value": "cwms-location"
								},
								{
									"key": "state",
									"value": "wv"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Locations - CWMS",
			"item": [
				{
					"name": "List CWMS Locations",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response time is less than 200 ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});",
									"pm.test(\"Valid JSON response\", function () {",
									"    pm.expect(pm.response.json());",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/locations?datatype=cwms-location",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"locations"
							],
							"query": [
								{
									"key": "datatype",
									"value": "cwms-location"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create CWMS Location (One)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Response time is less than 200 ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});",
									"pm.test(\"Valid JSON response\", function () {",
									"    pm.expect(pm.response.json());",
									"});",
									"let r = JSON.parse(responseBody);",
									"pm.environment.set(\"regression_project_slug\", r[0].slug);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"provider\": \"mvp\",\n    \"datatype\": \"cwms-location\",\n    \"code\": \"RegressionProject\",\n    \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n            -88.22111,\n            37.02139\n        ]\n    },\n    \"attributes\": {\n        \"public_name\": \"Regression Project CWMS Location Create One\",\n        \"kind\": \"PROJECT\"\n    },\n    \"state\": \"mn\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/providers/mvp/locations",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"providers",
								"mvp",
								"locations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create CWMS Location to delete (One)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Response time is less than 200 ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});",
									"pm.test(\"Valid JSON response\", function () {",
									"    pm.expect(pm.response.json());",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"provider\": \"mvp\",\n    \"datatype\": \"cwms-location\",\n    \"code\": \"Regression Delete Me\",\n    \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n            -88.22111,\n            37.02139\n        ]\n    },\n    \"attributes\": {\n        \"public_name\": \"Regression Test for Deletion\",\n        \"kind\": \"PROJECT\"\n    },\n    \"state\": \"mn\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/providers/mvp/locations",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"providers",
								"mvp",
								"locations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update CWMS Locations (One)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response time is less than 200 ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});",
									"pm.test(\"Valid JSON response\", function () {",
									"    pm.expect(pm.response.json());",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"provider\": \"mvp\",\n    \"provider_name\": \"St. Paul District\",\n    \"datatype\": \"cwms-location\",\n    \"datatype_name\": \"CWMS Location\",\n    \"code\": \"RegressionProject\",\n    \"slug\": \"{{regression_project_slug}}\",\n    \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n            -88,\n            37\n        ]\n    },\n    \"state\": \"MN\",\n    \"attributes\": {\n        \"kind\": \"PROJECT\",\n        \"public_name\": \"Regression Project CWMS Location Create One - UPDATE PUBLIC NAME\"\n    }\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/providers/mvp/locations",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"providers",
								"mvp",
								"locations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create CWMS Locations (Many)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Response time is less than 200 ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});",
									"pm.test(\"Valid JSON response\", function () {",
									"    pm.expect(pm.response.json());",
									"});",
									"let r = JSON.parse(responseBody);",
									"pm.environment.set(\"regression_project_pool_slug\", r[0].slug);",
									"pm.environment.set(\"regression_project_tailwater_slug\", r[1].slug);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"provider\": \"mvp\",\n        \"datatype\": \"cwms-location\",\n        \"code\": \"RegressionProject-Pool\",\n        \"geometry\": {\n            \"type\": \"Point\",\n            \"coordinates\": [\n                -88.222,\n                37.222\n            ]\n        },\n        \"attributes\": {\n            \"public_name\": \"Regression Project Pool CWMS Location Create #2\",\n            \"kind\": \"PROJECT\"\n        },\n        \"state\": \"mn\"\n    },\n    {\n        \"provider\": \"mvp\",\n        \"datatype\": \"cwms-location\",\n        \"code\": \"RegressionProject-Tailwater\",\n        \"geometry\": {\n            \"type\": \"Point\",\n            \"coordinates\": [\n                -88.333,\n                37.333\n            ]\n        },\n        \"attributes\": {\n            \"public_name\": \"RegressionProject Tailwater CWMS Location Create #3\",\n            \"kind\": \"PROJECT\"\n        },\n        \"state\": \"mn\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/providers/mvp/locations",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"providers",
								"mvp",
								"locations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update CWMS Locations (Many)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response time is less than 200 ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});",
									"pm.test(\"Valid JSON response\", function () {",
									"    pm.expect(pm.response.json());",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"provider\": \"mvp\",\n        \"provider_name\": \"St. Paul District\",\n        \"datatype\": \"cwms-location\",\n        \"code\": \"RegressionProject-Pool\",\n        \"slug\": \"{{regression_project_pool_slug}}\",\n        \"geometry\": {\n            \"type\": \"Point\",\n            \"coordinates\": [\n                -88,\n                37\n            ]\n        },\n        \"state\": \"MN\",\n        \"attributes\": {\n            \"kind\": \"PROJECT\",\n            \"public_name\": \"Regression Project Pool CWMS Location Create #2 - PUBLIC NAME UPDATED\"\n        }\n    },\n    {\n        \"provider\": \"mvp\",\n        \"provider_name\": \"St. Paul District\",\n        \"datatype\": \"cwms-location\",\n        \"code\": \"RegressionProject-Tailwater\",\n        \"slug\": \"{{regression_project_tailwater_slug}}\",\n        \"geometry\": {\n            \"type\": \"Point\",\n            \"coordinates\": [\n                -88,\n                37\n            ]\n        },\n        \"state\": \"MN\",\n        \"attributes\": {\n            \"kind\": \"PROJECT\",\n            \"public_name\": \"RegressionProject Tailwater CWMS Location Create #3 - PUBLIC NAME UPDATED\"\n        }\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/providers/mvp/locations",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"providers",
								"mvp",
								"locations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete CWMS Location",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response time is less than 200 ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});",
									"pm.test(\"Valid JSON response\", function () {",
									"    pm.expect(pm.response.json());",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/providers/mvp/locations/regression-delete-me",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"providers",
								"mvp",
								"locations",
								"regression-delete-me"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Locations - CWMS Watershed",
			"item": [
				{
					"name": "List CWMS Watersheds",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/locations?datatype=cwms-watershed",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"locations"
							],
							"query": [
								{
									"key": "datatype",
									"value": "cwms-watershed"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create CWMS Watershed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"let r = JSON.parse(responseBody);",
									"pm.environment.set(\"new_create_watershed_id\", r[0].id);",
									"pm.environment.set(\"new_create_watershed_slug\", r[0].slug);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"provider\": \"lrh\",\n    \"datatype\": \"cwms-watershed\",\n    \"slug\": \"regression-test-cwms-watershed-create-one\",\n    \"code\": \"Regression Test CWMS Watershed Create One\",\n    \"geometry\": {\n        \"type\": \"Polygon\",\n        \"coordinates\": [\n            [\n                [\n                    866000,\n                    1766000\n                ],\n                [\n                    980000,\n                    1766000\n                ],\n                [\n                    980000,\n                    1646000\n                ],\n                [\n                    866000,\n                    1646000\n                ],\n                [\n                    866000,\n                    1766000\n                ]\n            ]\n        ]\n    },\n    \"attributes\": {},\n    \"state\": \"wv\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/providers/lrh/locations",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"providers",
								"lrh",
								"locations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update CWMS Watershed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"provider\": \"lrh\",\n    \"provider_name\": \"Huntington District\",\n    \"datatype\": \"cwms-watershed\",\n    \"datatype_name\": \"CWMS Watershed\",\n    \"code\": \"regression test cwms watershed create one\",\n    \"slug\": \"{{new_create_watershed_slug}}\",\n    \"geometry\": {\n        \"type\": \"Polygon\",\n        \"coordinates\": [\n            [\n                [\n                    868000,\n                    1766000\n                ],\n                [\n                    980000,\n                    1766000\n                ],\n                [\n                    980000,\n                    1646000\n                ],\n                [\n                    866000,\n                    1646000\n                ],\n                [\n                    868000,\n                    1766000\n                ]\n            ]\n        ]\n    },\n    \"state\": \"TN\",\n    \"attributes\": {}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/providers/lrh/locations",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"providers",
								"lrh",
								"locations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Watershed #1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// status code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/locations/{{new_create_watershed_slug}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"locations",
								"{{new_create_watershed_slug}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Locations - USGS",
			"item": [
				{
					"name": "List Locations",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response time is less than 200 ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});",
									"pm.test(\"Valid JSON response\", function () {",
									"    pm.expect(pm.response.json());",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/locations?datatype=usgs-site&provider=usgs",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"locations"
							],
							"query": [
								{
									"key": "datatype",
									"value": "usgs-site"
								},
								{
									"key": "provider",
									"value": "usgs"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Location (One)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Response time is less than 200 ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});",
									"pm.test(\"Valid JSON response\", function () {",
									"    pm.expect(pm.response.json());",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"provider\": \"usgs\",\n    \"datatype\": \"usgs-site\",\n    \"slug\": \"01091400\",\n    \"code\": \"01091400\",\n    \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n            -88.111,\n            37.111\n        ]\n    },\n    \"attributes\": {\n        \"station_name\": \"USGS Example station near example city #1\",\n        \"site_type\": \"lk\"\n    },\n    \"state\": \"mn\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/providers/usgs/locations",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"providers",
								"usgs",
								"locations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Locations (Many)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Response time is less than 200 ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});",
									"pm.test(\"Valid JSON response\", function () {",
									"    pm.expect(pm.response.json());",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[{\n    \"provider\": \"usgs\",\n    \"datatype\": \"usgs-site\",\n    \"slug\": \"01091500\",\n    \"code\": \"01091500\",\n    \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n            -88.222,\n            37.222\n        ]\n    },\n    \"attributes\": {\n        \"station_name\": \"USGS Example station near example city #2\",\n        \"site_type\": \"lk\"\n    },\n    \"state\": \"mn\"\n},\n{\n    \"provider\": \"usgs\",\n    \"datatype\": \"usgs-site\",\n    \"slug\": \"01091600\",\n    \"code\": \"01091600\",\n    \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n            -88.333,\n            37.333\n        ]\n    },\n    \"attributes\": {\n        \"station_name\": \"USGS Example station near example city #3\",\n        \"site_type\": \"lk\"\n    },\n    \"state\": \"mn\"\n}]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/providers/usgs/locations",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"providers",
								"usgs",
								"locations"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Locations - NWS",
			"item": [
				{
					"name": "List Locations",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response time is less than 200 ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});",
									"pm.test(\"Valid JSON response\", function () {",
									"    pm.expect(pm.response.json());",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/locations?datatype=nws-site&provider=noaa-nws",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"locations"
							],
							"query": [
								{
									"key": "datatype",
									"value": "nws-site"
								},
								{
									"key": "provider",
									"value": "noaa-nws"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Location (One)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Response time is less than 200 ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});",
									"pm.test(\"Valid JSON response\", function () {",
									"    pm.expect(pm.response.json());",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"provider\": \"noaa-nws\",\n    \"datatype\": \"nws-site\",\n    \"slug\": \"br549\",\n    \"code\": \"br549\",\n    \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n            -88.111,\n            37.111\n        ]\n    },\n    \"attributes\": {\n        \"name\": \"NWS Example station near example city #1\"\n    },\n    \"state\": \"mn\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/providers/noaa-nws/locations",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"providers",
								"noaa-nws",
								"locations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Locations (Many)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Response time is less than 200 ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});",
									"pm.test(\"Valid JSON response\", function () {",
									"    pm.expect(pm.response.json());",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"provider\": \"noaa-nws\",\n        \"datatype\": \"nws-site\",\n        \"slug\": \"br550\",\n        \"code\": \"br550\",\n        \"geometry\": {\n            \"type\": \"Point\",\n            \"coordinates\": [\n                -88.111,\n                37.111\n            ]\n        },\n        \"attributes\": {\n            \"name\": \"NWS Example station near example city #2\"\n        },\n        \"state\": \"mn\"\n    },\n    {\n        \"provider\": \"noaa-nws\",\n        \"datatype\": \"nws-site\",\n        \"slug\": \"br551\",\n        \"code\": \"br551\",\n        \"geometry\": {\n            \"type\": \"Point\",\n            \"coordinates\": [\n                -88.111,\n                37.111\n            ]\n        },\n        \"attributes\": {\n            \"name\": \"NWS Example station near example city #3\"\n        },\n        \"state\": \"mn\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/providers/noaa-nws/locations",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"providers",
								"noaa-nws",
								"locations"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Providers",
			"item": [
				{
					"name": "List Providers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response time is less than 200 ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});",
									"pm.test(\"Valid JSON response\", function () {",
									"    pm.expect(pm.response.json());",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/providers",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"providers"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Timeseries",
			"item": [
				{
					"name": "Create Timeseries (Many) Atwood",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201 or 202\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"key\": \"Atwood-Outflow.Flow.Inst.0.Control Min\",\n        \"location\": {\n            \"provider\": \"LRH\",\n            \"datatype\": \"cwms-location\",\n            \"code\": \"Atwood-Outflow\"\n        },\n        \"datatype\": \"cwms-level\",\n        \"provider\": \"LRH\"\n    },\n    {\n        \"key\": \"Atwood-Outflow.Stage.Inst.0.Control Max with Dir\",\n        \"location\": {\n            \"provider\": \"LRH\",\n            \"datatype\": \"cwms-location\",\n            \"code\": \"Atwood-Outflow\"\n        },\n        \"datatype\": \"cwms-level\",\n        \"provider\": \"LRH\"\n    },\n    {\n        \"key\": \"Atwood-Outflow.Stage.Inst.0.Control Max Without Dir\",\n        \"location\": {\n            \"provider\": \"LRH\",\n            \"datatype\": \"cwms-location\",\n            \"code\": \"Atwood-Outflow\"\n        },\n        \"datatype\": \"cwms-level\",\n        \"provider\": \"LRH\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/providers/lrh/timeseries",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"providers",
								"lrh",
								"timeseries"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Timeseries (Many)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201 or 202\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"datatype\": \"cwms-timeseries\",\n        \"key\": \"RegressionProject-Pool.Elev.Inst.15Minutes.0.OBS\",\n        \"location\": {\"provider\": \"mvp\", \"datatype\": \"cwms-location\", \"code\": \"RegressionProject-Pool\"},\n        \"provider\": \"MVP\"\n        \n    },\n    {\n        \"datatype\": \"cwms-timeseries\",\n        \"key\": \"RegressionProject-Pool.Flow.Inst.15Minutes.0.OBS\",\n        \"location\": {\"provider\": \"mvp\", \"datatype\": \"cwms-location\", \"code\": \"RegressionProject-Pool\"},\n        \"provider\": \"MVP\"\n        \n    },\n    {\n        \"datatype\": \"cwms-timeseries\",\n        \"key\": \"RegressionProject-Tailwater.Stage.Inst.15Minutes.0.OBS\",\n        \"location\": {\"provider\": \"mvp\", \"datatype\": \"cwms-location\", \"code\": \"RegressionProject-Tailwater\"},\n        \"provider\": \"MVP\"\n        \n    },\n    {\n        \"datatype\": \"cwms-timeseries\",\n        \"key\": \"RegressionProject-Tailwater.Flow.Inst.15Minutes.0.OBS\",\n        \"location\": {\"provider\": \"mvp\", \"datatype\": \"cwms-location\", \"code\": \"RegressionProject-Tailwater\"},\n        \"provider\": \"MVP\"\n        \n    },\n    {\n        \"datatype\": \"cwms-level\",\n        \"key\": \"RegressionProject.Elev.Inst.0.Top of Dam\",\n        \"location\": {\"provider\": \"mvp\", \"datatype\": \"cwms-location\", \"code\": \"RegressionProject\"},\n        \"provider\": \"MVP\"\n        \n    },\n    {\n        \"datatype\": \"cwms-level\",\n        \"key\": \"RegressionProject.Elev.Inst.0.Streambed\",\n        \"location\": {\"provider\": \"mvp\", \"datatype\": \"cwms-location\", \"code\": \"RegressionProject\"},\n        \"provider\": \"MVP\"\n        \n    },\n    {\n        \"datatype\": \"cwms-level\",\n        \"key\": \"RegressionProject.Elev.Inst.0.Top of Flood\",\n        \"location\": {\"provider\": \"mvp\", \"datatype\": \"cwms-location\", \"code\": \"RegressionProject\"},\n        \"provider\": \"MVP\"\n        \n    },\n    {\n        \"datatype\": \"cwms-level\",\n        \"key\": \"RegressionProject.Elev.Inst.0.Bottom of Flood\",\n        \"location\": {\"provider\": \"mvp\", \"datatype\": \"cwms-location\", \"code\": \"RegressionProject\"},\n        \"provider\": \"MVP\"\n        \n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/providers/mvp/timeseries",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"providers",
								"mvp",
								"timeseries"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create/Update Timeseries Measurements (Many)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201 or 202\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"datatype\": \"cwms-timeseries\",\n        \"key\": \"RegressionProject-Pool.Elev.Inst.15Minutes.0.OBS\",\n        \"provider\": \"MVP\",\n        \"measurements\": {\n            \"times\": [\"2022-09-13T20:15:00-00:00\", \"2022-09-13T20:30:00-00:00\"],\n            \"values\": [755.90, 756.22]\n        }\n        \n    },\n    {\n        \"datatype\": \"cwms-timeseries\",\n        \"key\": \"RegressionProject-Pool.Flow.Inst.15Minutes.0.OBS\",\n        \"provider\": \"MVP\",\n        \"measurements\": {\n            \"times\": [\"2022-09-13T20:15:00-00:00\", \"2022-09-13T20:30:00-00:00\"],\n            \"values\": [305, 307]\n        }\n        \n    },\n    {\n        \"datatype\": \"cwms-timeseries\",\n        \"key\": \"RegressionProject-Tailwater.Flow.Inst.15Minutes.0.OBS\",\n        \"provider\": \"MVP\",\n        \"measurements\": {\n            \"times\": [\"2022-09-13T21:00:00-00:00\", \"2022-09-13T21:15:00-00:00\"],\n            \"values\": [459.20, 459.55]\n        }\n        \n    },\n    {\n        \"datatype\": \"cwms-timeseries\",\n        \"key\": \"RegressionProject-Tailwater.Stage.Inst.15Minutes.0.OBS\",\n        \"provider\": \"MVP\",\n        \"measurements\": {\n            \"times\": [\"2022-09-13T21:00:00-00:00\", \"2022-09-13T21:15:00-00:00\"],\n            \"values\": [15.20, 16.55]\n        }\n        \n    },\n    {\n        \"datatype\": \"cwms-level\",\n        \"key\": \"RegressionProject.Elev.Inst.0.Streambed\",\n        \"provider\": \"MVP\",\n        \"measurements\": {\n            \"times\": [\"2022-09-22T21:00:00-00:00\"],\n            \"values\": [700.55]\n        }\n        \n    },\n    {\n        \"datatype\": \"cwms-level\",\n        \"key\": \"RegressionProject.Elev.Inst.0.Top of Dam\",\n        \"provider\": \"MVP\",\n        \"measurements\": {\n            \"times\": [\"2022-09-22T21:00:00-00:00\"],\n            \"values\": [800.55]\n        }\n        \n    },\n    {\n        \"datatype\": \"cwms-level\",\n        \"key\": \"RegressionProject.Elev.Inst.0.Top of Flood\",\n        \"provider\": \"MVP\",\n        \"measurements\": {\n            \"times\": [\"2022-09-22T21:00:00-00:00\"],\n            \"values\": [780.55]\n        }\n        \n    },\n    {\n        \"datatype\": \"cwms-level\",\n        \"key\": \"RegressionProject.Elev.Inst.0.Bottom of Flood\",\n        \"provider\": \"MVP\",\n        \"measurements\": {\n            \"times\": [\"2022-09-22T21:00:00-00:00\"],\n            \"values\": [750.0]\n        }\n        \n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/timeseries/measurements",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"timeseries",
								"measurements"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Timeseries",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/timeseries",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"timeseries"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Timeseries Query",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/timeseries?q=alum",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"timeseries"
							],
							"query": [
								{
									"key": "q",
									"value": "alum"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List Timeseries by provider and datatype",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/timeseries?provider=lrh&datatype=cwms-timeseries",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"timeseries"
							],
							"query": [
								{
									"key": "provider",
									"value": "lrh"
								},
								{
									"key": "datatype",
									"value": "cwms-timeseries"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List Timeseries by provider, ds_type, etl_values_enabled",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/timeseries?provider=lrh&datatype=cwms-timeseries&etl_values_enabled=true",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"timeseries"
							],
							"query": [
								{
									"key": "provider",
									"value": "lrh"
								},
								{
									"key": "datatype",
									"value": "cwms-timeseries"
								},
								{
									"key": "etl_values_enabled",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Timeseries Levels (Many)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/timeseries?provider=lrh&datatype=cwms-level",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"timeseries"
							],
							"query": [
								{
									"key": "provider",
									"value": "lrh"
								},
								{
									"key": "datatype",
									"value": "cwms-level"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Timeseries Levels (NWS Levels)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/timeseries?provider=noaa-nws&datatype=nws-level",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"timeseries"
							],
							"query": [
								{
									"key": "provider",
									"value": "noaa-nws"
								},
								{
									"key": "datatype",
									"value": "nws-level"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Charts",
			"item": [
				{
					"name": "List Charts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/charts",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"charts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Chart (One)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"let r = JSON.parse(responseBody);",
									"pm.environment.set(\"new_chart_slug\", r.slug);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"provider_slug\": \"mvp\",\n    \"location_slug\": \"{{regression_project_slug}}\",\n    \"name\": \"RegressionProject Dam Profile Chart\",\n    \"type_id\": \"53da77d0-6550-4f02-abf8-4bcd1a596a7c\"\n}   ",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/charts",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"charts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Chart (One)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/charts/{{new_chart_slug}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"charts",
								"{{new_chart_slug}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Chart Mapping (Many)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201 or 202\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"variable\": \"pool\",\n        \"key\": \"RegressionProject-Pool.Elev.Inst.15Minutes.0.OBS\",\n        \"datatype\": \"cwms-timeseries\",\n        \"provider\": \"mvp\"\n    },\n    {\n        \"variable\": \"tail\",\n        \"key\": \"RegressionProject-Tailwater.Stage.Inst.15Minutes.0.OBS\",\n        \"datatype\": \"cwms-timeseries\",\n        \"provider\": \"mvp\"\n    },\n    {\n        \"variable\": \"inflow\",\n        \"key\": \"RegressionProject-Pool.Flow.Inst.15Minutes.0.OBS\",\n        \"datatype\": \"cwms-timeseries\",\n        \"provider\": \"mvp\"\n    },\n    {\n        \"variable\": \"outflow\",\n        \"key\": \"RegressionProject-Tailwater.Flow.Inst.15Minutes.0.OBS\",\n        \"datatype\": \"cwms-timeseries\",\n        \"provider\": \"mvp\"\n    },\n    {\n        \"variable\": \"streambed\",\n        \"key\": \"RegressionProject.Elev.Inst.0.Streambed\",\n        \"datatype\": \"cwms-level\",\n        \"provider\": \"mvp\"\n    },\n    {\n        \"variable\": \"top-of-dam\",\n        \"key\": \"RegressionProject.Elev.Inst.0.Top of Dam\",\n        \"datatype\": \"cwms-level\",\n        \"provider\": \"mvp\"\n    },\n    {\n        \"variable\": \"top-of-flood\",\n        \"key\": \"RegressionProject.Elev.Inst.0.Top of Flood\",\n        \"datatype\": \"cwms-level\",\n        \"provider\": \"mvp\"\n    },\n    {\n        \"variable\": \"bottom-of-flood\",\n        \"key\": \"RegressionProject.Elev.Inst.0.Bottom of Flood\",\n        \"datatype\": \"cwms-level\",\n        \"provider\": \"mvp\"\n    }\n]   ",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/charts/{{new_chart_slug}}/assign",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"charts",
								"{{new_chart_slug}}",
								"assign"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Dam Profile Chart By Location Slug",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/locations/{{regression_project_slug}}/profile-chart",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"locations",
								"{{regression_project_slug}}",
								"profile-chart"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Dam Profile Chart By Location Slug (json)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/locations/{{regression_project_slug}}/profile-chart?format=json",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"locations",
								"{{regression_project_slug}}",
								"profile-chart"
							],
							"query": [
								{
									"key": "format",
									"value": "json"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Chart",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/visualizations/{{new_visualization_slug}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"visualizations",
								"{{new_visualization_slug}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "in",
				"value": "query",
				"type": "string"
			},
			{
				"key": "value",
				"value": "appkey",
				"type": "string"
			},
			{
				"key": "key",
				"value": "key",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}