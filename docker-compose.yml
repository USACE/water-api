version: '3'

networks:
  default:
    name: water-api_default
  cumulus:
    name: cumulus-api_default


services:
  charts:
    build:
      context: ./d3-chart-server
    container_name: charts
    restart: on-failure
    ports:
      - '3000:3000'
  water-db:
    image: postgis/postgis:13-3.1
    container_name: water-db
    restart: always
    environment:
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
  # --------------------------------
  water-tiger-data:
    build:
      context: ./postgis-tiger-data-init
    container_name: water-tiger-data
    restart: on-failure
    depends_on:
      water-db:
        condition: service_started    
    environment:
      - DB_USER=postgres
      - DB_PASS=postgres
      - DB_NAME=postgres
      - DB_HOST=water-db
    # profiles: ["init"]
  # --------------------------------
  water-flyway:
    image: flyway/flyway
    container_name: water-flyway
    restart: on-failure
    command: -url=jdbc:postgresql://water-db:5432/postgres -schemas=water -user=postgres -password=postgres -connectRetries=60 migrate
    environment:
      - FLYWAY_EDITION=community
      - FLYWAY_LOCATIONS=filesystem:/flyway/sql/common,filesystem:/flyway/sql/local,filesystem:/flyway/sql/develop
    volumes:
      - ./sql:/flyway/sql
    depends_on:
      water-db:
        condition: service_started
      water-tiger-data:
        condition: service_completed_successfully
  # --------------------------------
  water-api:
    build:
      context: ./
    container_name: water-api
    restart: always
    environment:
      - AWS_ACCESS_KEY_ID=AKIAIOSFODNN7EXAMPLE
      - AWS_SECRET_ACCESS_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
      - AWS_REGION=us-east-1
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_S3_BUCKET=castle-data-develop
      - AWS_S3_ENDPOINT=http://minio:9000
      - AWS_S3_DISABLE_SSL=True
      - AWS_S3_FORCE_PATH_STYLE=True
      - AUTH_MOCKED=true
      - APPLICATION_KEY=appkey
      - WATER_DB_USER=water_user
      - WATER_DB_PASS=water_pass
      - WATER_DB_NAME=postgres
      - WATER_DB_HOST=water-db
      - WATER_DB_SSLMODE=disable
      - DB_POOL_MAX_CONNS=10
      - DB_POOL_MAX_CONN_IDLE_TIME=30m
      - DB_POOL_MIN_CONNS=5
      - PG_FEATURESERV_URL=http://water-featureserv:8080
      - CHARTSERVER_URL=http://charts:3000
    ports:
      - '80:80'
    depends_on:
      charts:
        condition: service_started
      water-db:
        condition: service_started
      water-flyway:
        condition: service_completed_successfully
      water-tiger-data:
        condition: service_completed_successfully        
  # --------------------------------
  water-elasticmq:
    image: softwaremill/elasticmq
    container_name: water-elasticmq
    volumes:
      - ./elasticmq.conf:/opt/elasticmq.conf
    ports:
      - "9324:9324"
      - "9325:9325"
    restart: always
  # --------------------------------
  water-listener:
    build:
      context: listener
    container_name: water-listener
    environment:
      - AWS_ACCESS_KEY_ID=x
      - AWS_SECRET_ACCESS_KEY=x
      - AWS_REGION=us-east-1
      - WATER_DB_USER=water_user
      - WATER_DB_PASS=water_pass
      - WATER_DB_NAME=postgres
      - WATER_DB_HOST=water-db
      - WATER_DB_SSLMODE=disable
      - WATER_ASYNC_ENGINE_GEOPROCESS=AWSSQS
      - WATER_ASYNC_ENGINE_GEOPROCESS_TARGET=local/http://elasticmq:9324/queue/water-geoprocess
      - WATER_MIN_RECONN=10s
      - WATER_MAX_RECONN=1m
    depends_on:
      water-db:
        condition: service_started
      water-elasticmq:
        condition: service_started
      water-flyway:
        condition: service_completed_successfully
    restart: always
  # --------------------------------
  water-featureserv:
    image: pramsey/pg_featureserv
    container_name: water-featureserv
    restart: always
    environment:
      - DATABASE_URL=postgres://postgres:postgres@water-db:5432/postgres
      - PGFS_SERVER_HTTPPORT=8080
      - PGFS_SERVER_HTTPSPORT=8443
      - PGFS_SERVER_URLBASE=http://localhost/features
      - PGFS_SERVER_BASEPATH=/features
      - PGFS_SERVER_DEBUG=true
      - PGFS_WEBSITE_BASEMAPURL=http://a.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png
    depends_on:
      water-db:
        condition: service_started
      # water-api:
      #   condition: service_started
  # --------------------------------
  # water-swagger-ui:
  #   image: swaggerapi/swagger-ui
  #   container_name: water-swagger-ui
  #   ports:
  #     - "8001:8080"
  #   volumes:
  #     - ./apidoc.yml:/usr/share/nginx/html/swagger/api.yaml
  #   environment:
  #     API_URL: swagger/api.yaml

