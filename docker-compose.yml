version: '3'

services:
  api:
    build:
      context: ./
    restart: always
    environment:
      - AWS_ACCESS_KEY_ID=AKIAIOSFODNN7EXAMPLE
      - AWS_SECRET_ACCESS_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
      - AWS_REGION=us-east-1
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_S3_BUCKET=cwbi-data-develop
      - AWS_S3_ENDPOINT=http://minio:9000
      - AWS_S3_DISABLE_SSL=True
      - AWS_S3_FORCE_PATH_STYLE=True
      - AUTH_MOCKED=true
      - APPLICATION_KEY=appkey
      - WATER_DB_USER=water_user
      - WATER_DB_PASS=water_pass
      - WATER_DB_NAME=postgres
      - WATER_DB_HOST=db
      - WATER_DB_SSLMODE=disable
      - DB_POOL_MAX_CONNS=10
      - DB_POOL_MAX_CONN_IDLE_TIME=30m
      - DB_POOL_MIN_CONNS=5
    ports:
      - '80:80'
    depends_on:
      - db
  # --------------------------------
  db:
    image: postgis/postgis:13-3.1
    restart: always
    environment:
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
  # --------------------------------
  tiger-data:
    restart: on-failure
    depends_on:
      - db
    # profiles: ["init"]
    build:
      context: ./postgis-tiger-data-init
    environment:
      - DB_USER=postgres
      - DB_PASS=postgres
      - DB_NAME=postgres
      - DB_HOST=db
  # --------------------------------
  flyway:
    image: flyway/flyway
    restart: on-failure
    command: -url=jdbc:postgresql://db:5432/postgres -schemas=a2w_cwms -user=postgres -password=postgres -connectRetries=60 migrate
    environment:
      - FLYWAY_EDITION=community
    volumes:
      - ./sql:/flyway/sql
    depends_on:
      - db
  # --------------------------------
  pgadmin:
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=postgres@postgres.com
      - PGADMIN_DEFAULT_PASSWORD=postgres
    ports:
      - '8081:80'
  # --------------------------------
  swagger-ui:
    image: swaggerapi/swagger-ui
    container_name: swagger-ui
    ports:
      - "8001:8080"
    volumes:
      - ./apidoc.yml:/usr/share/nginx/html/swagger/api.yaml
    environment:
      API_URL: swagger/api.yaml
  # --------------------------------
  elasticmq:
    image: softwaremill/elasticmq
    volumes:
      - ./elasticmq.conf:/opt/elasticmq.conf
    ports:
      - "9324:9324"
      - "9325:9325"
    restart: always
  # --------------------------------
  listener:
    build:
      context: listener
    environment:
      - AWS_ACCESS_KEY_ID=x
      - AWS_SECRET_ACCESS_KEY=x
      - AWS_REGION=us-east-1
      - WATER_DB_USER=water_user
      - WATER_DB_PASS=water_pass
      - WATER_DB_NAME=postgres
      - WATER_DB_HOST=db
      - WATER_DB_SSLMODE=disable
      - WATER_ASYNC_ENGINE_GEOPROCESS=AWSSQS
      - WATER_ASYNC_ENGINE_GEOPROCESS_TARGET=local/http://elasticmq:9324/queue/water-geoprocess
      - WATER_MIN_RECONN=10s
      - WATER_MAX_RECONN=1m
    depends_on:
      - elasticmq
      - db
    restart: always
